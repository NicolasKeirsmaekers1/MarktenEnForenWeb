{"version":3,"sources":["./ClientApp/app/componenten/validators/email.validator.ts","./ClientApp/app/componenten/validators/index.ts","./ClientApp/app/componenten/validators/date.validator.ts","./ClientApp/app/componenten/validators/validator.service.ts","./ClientApp/app/componenten/validators/validators.module.ts","./ClientApp/app/componenten/search/search.module.ts","./ClientApp/app/componenten/search/search.component.ts","./ClientApp/app/componenten/search/index.ts"],"names":[],"mappings":"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","file":"default~abonnement-abonnement-module~beheer-beheer-module~factuur-factuur-module~klant-klant-module~~da232cc7.js","sourcesContent":["import { Directive, forwardRef  } from \"@angular/core\";\r\nimport { NG_VALIDATORS, FormControl, ValidatorFn } from '@angular/forms';\r\n\r\n@Directive({\r\n    selector: '[validEmail][ngModel],[validEmail][formControl]',\r\n    providers: [\r\n        { provide: NG_VALIDATORS, useExisting: forwardRef(() => EmailValidator), multi: true }\r\n    ]\r\n})\r\nexport class EmailValidator {\r\n    validator: ValidatorFn;\r\n\r\n    constructor() {\r\n        this.validator = validateEmailFactory();\r\n    }\r\n\r\n    validate(c: FormControl) {\r\n        return this.validator(c);\r\n    }\r\n}\r\n\r\nfunction validateEmailFactory(): ValidatorFn {\r\n    return (c: FormControl) => {\r\n        let EMAIL_REGEXP = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return !c.value || EMAIL_REGEXP.test(c.value) ? null : {\r\n            validEmail: {\r\n                valid: false\r\n            }\r\n        };\r\n    };\r\n}","export * from \"./validators.module\";\r\nexport * from \"./validator.service\";\r\nimport { EmailValidator } from \"./email.validator\";\r\nimport { DateBeforeValidator } from \"./date.validator\";\r\nimport { DateAfterValidator } from \"./date.validator\";\r\nimport { ValidatorFn, FormGroup} from \"@angular/forms\";\r\n\r\nexport class CustomValidators {\r\n\r\n    static get validEmail(): any {\r\n        return new EmailValidator();\r\n    }\r\n\r\n    static dateBefore(thisControl: string, thanControlName: string): any {\r\n        return DateBeforeValidator.validateDateBeforeFactory(thisControl, thanControlName);\r\n    }\r\n\r\n    static dateAfter(thisControl: string, thanControlName: string): any {\r\n        return DateAfterValidator.validateDateAfterFactory(thisControl, thanControlName);\r\n    }\r\n}\r\n","import { Directive, forwardRef } from \"@angular/core\";\r\nimport { NG_VALIDATORS, FormControl, ValidatorFn, FormGroup, AbstractControl } from '@angular/forms';\r\n\r\n@Directive({\r\n    selector: '[dateAfter][ngModel],[dateAfter][formControl]',\r\n    providers: [\r\n        { provide: NG_VALIDATORS, useExisting: forwardRef(() => DateAfterValidator), multi: true }\r\n    ]\r\n})\r\nexport class DateAfterValidator {\r\n    validator: ValidatorFn;\r\n\r\n    constructor(thisControl: string, thanControlName: string) {\r\n        this.validator = DateAfterValidator.validateDateAfterFactory(thisControl, thanControlName);\r\n    }\r\n\r\n    validate(c: FormControl) {\r\n        return this.validator(c);\r\n    }\r\n\r\n    public static validateDateAfterFactory(thisControl: string, thanControlName: string): ValidatorFn {\r\n        return (group: FormGroup): { [key: string]: any } => {\r\n            const dateCtrl = group.controls[thisControl];\r\n            const thanCtrl = group.controls[thanControlName];\r\n            const startDateTimestamp = Date.parse(thanCtrl.value);\r\n            const endDateTimestamp = Date.parse(dateCtrl.value);\r\n            const result = (endDateTimestamp < startDateTimestamp) ? { dateAfter: { valid: false } } : null;\r\n            if (result) {\r\n                dateCtrl.setErrors(result);\r\n                dateCtrl.updateValueAndValidity({ onlySelf: true });\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[dateBefore][ngModel],[dateBefore][formControl]',\r\n    providers: [\r\n        { provide: NG_VALIDATORS, useExisting: forwardRef(() => DateBeforeValidator), multi: true }\r\n    ]\r\n})\r\nexport class DateBeforeValidator {\r\n    validator: ValidatorFn;\r\n\r\n    constructor(thisControl: string, thanControlName: string) {\r\n        this.validator = DateBeforeValidator.validateDateBeforeFactory(thisControl, thanControlName);\r\n    }\r\n\r\n    validate(c: FormControl) {\r\n        return this.validator(c);\r\n    }\r\n\r\n    public static validateDateBeforeFactory(thisControl: string, thanControlName: string): ValidatorFn {\r\n        return (group: FormGroup): { [key: string]: any } => {\r\n            const dateCtrl = group.controls[thisControl];\r\n            const thanCtrl = group.controls[thanControlName];\r\n            const startDateTimestamp = Date.parse(thanCtrl.value);\r\n            const endDateTimestamp = Date.parse(dateCtrl.value);\r\n            const result = (endDateTimestamp > startDateTimestamp) ? { dateBefore: { valid: false } } : null;\r\n            if (result) {\r\n                dateCtrl.setErrors(result);\r\n                dateCtrl.updateValueAndValidity({ onlySelf: true });\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\r\n\r\n@Injectable()\r\nexport class ValidatorService {\r\n    valideFormGroup(group: FormGroup): void {\r\n        this.iterateControls(group, (control: FormControl) => {\r\n            if (control.enabled) {\r\n                control.updateValueAndValidity();\r\n                control.markAsTouched();\r\n                control.markAsDirty();\r\n            }\r\n        });\r\n    }\r\n\r\n    resetValidation(group: FormGroup): void {\r\n        this.iterateControls(group, (control: FormControl) => {\r\n            if (control.enabled) {\r\n                control.markAsUntouched();\r\n                control.markAsPristine();\r\n            }\r\n        });\r\n    }\r\n\r\n    private iterateControls(group: FormGroup, controlAction: Function) {\r\n        for (let key in group.controls) {\r\n            const control: any = group.controls[key];\r\n            if (control.controls) {\r\n                this.iterateControls(control, controlAction);\r\n            }\r\n            else {\r\n                controlAction.apply(this, [control]);\r\n            }\r\n        }\r\n    }\r\n}","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { EmailValidator } from './email.validator';\r\nimport { ValidatorService } from \"./validator.service\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        EmailValidator\r\n    ],\r\n    providers: [ValidatorService],\r\n    imports: [FormsModule],\r\n    exports: [EmailValidator]\r\n})\r\nexport class ValidatorsModule {\r\n\r\n}","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { SearchComponent } from \"./search.component\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        SearchComponent\r\n    ],\r\n    imports: [CommonModule, FormsModule],\r\n    exports: [SearchComponent]\r\n\r\n})\r\nexport class SearchModule {\r\n\r\n}","\r\nimport {fromEvent as observableFromEvent,  Observable } from 'rxjs';\r\n\r\nimport {distinctUntilChanged, debounceTime, map} from 'rxjs/operators';\r\nimport { Component, forwardRef, Input, Output, EventEmitter, ElementRef, OnInit } from \"@angular/core\";\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\r\nimport \"rxjs/add/observable/fromEvent\";\r\n\r\n@Component({\r\n    selector: \"search\",\r\n    providers: [\r\n        { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SearchComponent), multi: true }\r\n    ],\r\n    template: `\r\n            <div class=\"input-group\">\r\n                <input class=\"form-control\" type=\"text\" [value]=\"value\" (input)=\"value = $event.target.value\" (blur)=\"propagateTouched()\" />\r\n                <span class=\"input-group-btn\">\r\n                    <button class=\"btn btn-primary\" type=\"button\" (click)=\"searchClicked()\"><i class=\"fa fa-search\"></i></button>\r\n                </span>\r\n            </div>\r\n            `\r\n})\r\nexport class SearchComponent implements OnInit, ControlValueAccessor {\r\n    private _value: string = \"\";\r\n    private propagateChange = (_: any) => { };\r\n    private propagateTouched = (_: any) => { };\r\n\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    set value(val) {\r\n        this._value = val;\r\n        this.propagateChange(this._value);\r\n    };\r\n\r\n    @Input() delay: number = 2500;\r\n    @Input() autoSearch: boolean = true;\r\n    @Output() search = new EventEmitter();\r\n\r\n    constructor(private element: ElementRef) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.autoSearch) {\r\n            const eventStream = observableFromEvent(this.element.nativeElement, 'keyup').pipe(\r\n                map(() => this.value),\r\n                debounceTime(this.delay),\r\n                distinctUntilChanged(),);\r\n\r\n            eventStream.subscribe(input => {\r\n                this.search.emit({\r\n                    value: input\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    searchClicked(): void {\r\n        this.search.emit({\r\n            value: this.value\r\n        });\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        if (value !== undefined) {\r\n            this.value = value;\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn): void {\r\n        this.propagateTouched = fn;\r\n    }\r\n\r\n}","export * from \"./search.module\";\r\n"],"sourceRoot":"webpack:///"}